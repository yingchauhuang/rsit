Update SW.fsk001
set (STK_CHNM)=(select STK_CHNM from XQ.HK001 WHERE SW.fsk001.STK_CD=XQ.HK001.STK_CD)
where SW.fsk001.STK_CD in (select STK_CD from XQ.HK001);
commit;
--Merge INTO SW.FSK001 D
--USING (select STK_CD,STK_CHNM,STK_ENGNM,DEAL_CTR,'TW' as COUNTRY_CD,'0' as INDEX_TYPE from XQ.HK001) S
--on (D.STK_CD = S.STK_CD AND D.DEAL_CTR = S.DEAL_CTR)
--WHEN MATCHED THEN UPDATE SET
--D.STK_CHNM = S.STK_CHNM,
--D.STK_ENGNM = S.STK_ENGNM
--WHEN NOT MATCHED THEN INSERT
--(D.STK_CD,
--D.DEAL_CTR,
--D.STK_CHNM,
--D.STK_ENGNM,
--D.COUNTRY_CD,
--D.INDEX_TYPE)
--VALUES
--(S.STK_CD,
--S.DEAL_CTR,
--S.STK_CHNM,
--S.STK_ENGNM,
--S.COUNTRY_CD,
--S.INDEX_TYPE);
--commit;

Update SW.fsk001
set OS_STK=(select cast(Capital as number(12)) from XQ.HK_Capital WHERE SW.fsk001.STK_CD=XQ.HK_Capital.STK_CD AND Capital is not null)
where SW.fsk001.STK_CD in (select STK_CD from XQ.HK_Capital  where Capital is not null);
commit;

Merge INTO SW.FSK004 D
USING (
select '00' as STKDATA_KIND,
LTRIM(SYMBOL,'0')||' HK'  as STKLG_TYPE,
'H1' as DEAL_CTR,
to_char(tDate,'YYYYMMDD') as DATA_DATE,
NVL(tOpen,0) as OPEN_PRI,
NVL(tClose,0) as CLS_PRI,
NVL(tHigh,0) as TOP_PRI,
NVL(tLow,0) as LOW_PRI,
NVL(tVolume,0)  as TRA_QTY,
'C' as TR_SOURCE,
'XQ' as UPD_USER,
to_char(SYSDATE,'YYYYMMDD') as UPD_DATE,
to_char(SYSDATE,'HHMISS') as UPD_TIME,
'XQ' as UPLOAD_UID,
to_char(SYSDATE,'YYYYMMDD') as UPLOAD_DATE,
to_char(SYSDATE,'HHMISS') as UPLOAD_TIME
from XQ.HK002
WHERE LENGTH(SYMBOL)<7 AND SYMBOL!='HSI'
) S
on (D.STKDATA_KIND = S.STKDATA_KIND AND D.DEAL_CTR=S.DEAL_CTR AND D.STKLG_TYPE=S.STKLG_TYPE AND D.DATA_DATE=S.DATA_DATE)
WHEN MATCHED THEN UPDATE SET
D.OPEN_PRI = S.OPEN_PRI,
D.CLS_PRI = S.CLS_PRI,
D.TOP_PRI = S.TOP_PRI,
D.LOW_PRI = S.LOW_PRI,
D.TRA_QTY = S.TRA_QTY,
D.TR_SOURCE = S.TR_SOURCE,
D.UPD_USER = S.UPD_USER,
D.UPD_DATE = S.UPD_DATE,
D.UPD_TIME = S.UPD_TIME,
D.UPLOAD_UID = S.UPLOAD_UID,
D.UPLOAD_DATE = S.UPLOAD_DATE,
D.UPLOAD_TIME = S.UPLOAD_TIME
WHEN NOT MATCHED THEN INSERT
(D.STKDATA_KIND,
D.STKLG_TYPE,
D.DEAL_CTR,
D.DATA_DATE,
D.OPEN_PRI,
D.CLS_PRI,
D.TOP_PRI,
D.LOW_PRI,
D.TRA_QTY,
D.TR_SOURCE,
D.UPD_USER,
D.UPD_DATE,
D.UPD_TIME,
D.UPLOAD_UID,
D.UPLOAD_DATE,
D.UPLOAD_TIME)
VALUES
(S.STKDATA_KIND,
S.STKLG_TYPE,
S.DEAL_CTR,
S.DATA_DATE,
S.OPEN_PRI,
S.CLS_PRI,
S.TOP_PRI,
S.LOW_PRI,
S.TRA_QTY,
S.TR_SOURCE,
S.UPD_USER,
S.UPD_DATE,
S.UPD_TIME,
S.UPLOAD_UID,
S.UPLOAD_DATE,
S.UPLOAD_TIME);
commit;

Merge INTO SW.FSK004 D
USING (
select '40' as STKDATA_KIND,
'00000000' as STKLG_TYPE,
'H1' as DEAL_CTR,
to_char(tDate,'YYYYMMDD') as DATA_DATE,
tOpen as OPEN_PRI,
tClose as CLS_PRI,
tHigh as TOP_PRI,
tLow as LOW_PRI,
tVolume as TRA_QTY,
'C' as TR_SOURCE,
'XQ' as UPD_USER,
to_char(SYSDATE,'YYYYMMDD') as UPD_DATE,
to_char(SYSDATE,'HHMISS') as UPD_TIME,
'XQ' as UPLOAD_UID,
to_char(SYSDATE,'YYYYMMDD') as UPLOAD_DATE,
to_char(SYSDATE,'HHMISS') as UPLOAD_TIME
from XQ.HK002
WHERE LENGTH(SYMBOL)<7 and SYMBOL='HSI'
) S
on (D.STKDATA_KIND = S.STKDATA_KIND AND D.DEAL_CTR=S.DEAL_CTR AND D.STKLG_TYPE=S.STKLG_TYPE AND D.DATA_DATE=S.DATA_DATE)
WHEN MATCHED THEN UPDATE SET
D.OPEN_PRI = S.OPEN_PRI,
D.CLS_PRI = S.CLS_PRI,
D.TOP_PRI = S.TOP_PRI,
D.LOW_PRI = S.LOW_PRI,
D.TRA_QTY = S.TRA_QTY,
D.TR_SOURCE = S.TR_SOURCE,
D.UPD_USER = S.UPD_USER,
D.UPD_DATE = S.UPD_DATE,
D.UPD_TIME = S.UPD_TIME,
D.UPLOAD_UID = S.UPLOAD_UID,
D.UPLOAD_DATE = S.UPLOAD_DATE,
D.UPLOAD_TIME = S.UPLOAD_TIME
WHEN NOT MATCHED THEN INSERT
(D.STKDATA_KIND,
D.STKLG_TYPE,
D.DEAL_CTR,
D.DATA_DATE,
D.OPEN_PRI,
D.CLS_PRI,
D.TOP_PRI,
D.LOW_PRI,
D.TRA_QTY,
D.TR_SOURCE,
D.UPD_USER,
D.UPD_DATE,
D.UPD_TIME,
D.UPLOAD_UID,
D.UPLOAD_DATE,
D.UPLOAD_TIME)
VALUES
(S.STKDATA_KIND,
S.STKLG_TYPE,
S.DEAL_CTR,
S.DATA_DATE,
S.OPEN_PRI,
S.CLS_PRI,
S.TOP_PRI,
S.LOW_PRI,
S.TRA_QTY,
S.TR_SOURCE,
S.UPD_USER,
S.UPD_DATE,
S.UPD_TIME,
S.UPLOAD_UID,
S.UPLOAD_DATE,
S.UPLOAD_TIME);
commit;
exit;
              

exit;
